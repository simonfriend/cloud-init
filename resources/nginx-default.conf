# Nginx SSL Reverse Proxy Configuration
# Proxies HTTPS traffic to local backend service

# Allow underscores in headers for API compatibility
underscores_in_headers on;

# Backend service configuration
upstream backend {
    server 127.0.0.1:8734;
    keepalive 64;
}

# HTTPS server block
server {
    # Listen on both IPv4 and IPv6
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    
    # Dynamic hostname from cloud-init template
    server_name <<hostname>>.forward.computer;

    # SSL Configuration with Let's Encrypt certificates
    ssl_certificate     /etc/letsencrypt/live/<<hostname>>.forward.computer/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<<hostname>>.forward.computer/privkey.pem;
    
    # Enhanced SSL security (remove TLSv1 and TLSv1.1 for better security)
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Reverse proxy configuration
    location / {
        proxy_pass           http://backend;
        proxy_http_version   1.1;
        
        # Connection management
        proxy_set_header     Connection              "keep-alive";
        
        # Standard proxy headers
        proxy_set_header     Host                    $host;
        proxy_set_header     X-Real-IP               $remote_addr;
        proxy_set_header     X-Forwarded-For         $proxy_add_x_forwarded_for;
        proxy_set_header     X-Forwarded-Proto       $scheme;
        
        # Buffer configuration for performance
        proxy_buffer_size       32k;
        proxy_buffers           4 32k;
        proxy_busy_buffers_size 64k;
        
        # Disable chunked transfer encoding
        chunked_transfer_encoding off;
    }
}
